// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SideBarPage component Should match snapshot 1`] = `
.c3 {
  background-color: #2980b9;
  color: white;
  border: 1px solid #2980b9;
  display: inline-block;
  outline: none;
  cursor: pointer;
  font-size: .875rem;
  padding: .25rem .5rem;
  text-align: center;
  line-height: 1.5;
  -webkit-transition: 0.1s linear;
  transition: 0.1s linear;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.2);
}

.c3 svg {
  vertical-align: middle;
}

.c3:hover {
  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2),0 3px 10px 0 rgba(0,0,0,0.19);
}

.c3:active {
  box-shadow: none;
}

.c2 {
  -moz-appearance: none;
  -webkit-appearance: none;
  background: none;
  border: none;
  outline: none;
  font-size: inherit;
}

.c1 {
  margin-left: 0;
  -webkit-transition: 100ms linear;
  transition: 100ms linear;
  position: fixed;
  margin-top: 2px;
  left: 260px;
}

.c0 {
  position: fixed;
  z-index: 1;
  top: 56px;
  -webkit-transition: 100ms linear;
  transition: 100ms linear;
  height: 100vh;
  width: 300px;
  background-color: #2c3e50;
  color: white;
  font-size: 20px;
  left: 0px;
}

.c0 ul {
  list-style: none;
}

.c4 {
  position: relative;
  -webkit-transition: 100ms linear;
  transition: 100ms linear;
  z-index: 0;
  padding-left: 300px;
}

<SideBarPage>
  <div>
    <SideBarContainer
      shown={true}
    >
      <StyledComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "SideBarContainer-bdbgzo-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "position:fixed;z-index:",
                "1",
                ";top:56px;transition:100ms linear;height:100vh;width:300px;background-color:",
                [Function],
                ";color:white;font-size:20px;ul{list-style:none;}",
                [Function],
                ";",
              ],
            },
            "displayName": "SideBarContainer",
            "render": [Function],
            "styledComponentId": "SideBarContainer-bdbgzo-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        shown={true}
      >
        <div
          className="c0"
        >
          <SideBarBtn
            color="primary"
            onClick={[Function]}
            shown={true}
            size="small"
          >
            <StyledComponent
              color="primary"
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "SideBarBtn-lihfen-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "margin-left:0;transition:100ms linear;position:fixed;margin-top:2px;",
                      [Function],
                      ";",
                    ],
                  },
                  "displayName": "SideBarBtn",
                  "render": [Function],
                  "styledComponentId": "SideBarBtn-lihfen-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
              shown={true}
              size="small"
            >
              <Button
                className="c1"
                color="primary"
                onClick={[Function]}
                shown={true}
                size="small"
              >
                <ButtonWrapper
                  className="c1"
                  onClick={[Function]}
                  overrides={Object {}}
                  shown={true}
                  type="button"
                >
                  <StyledComponent
                    className="c1"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": undefined,
                        "componentStyle": ComponentStyle {
                          "componentId": "ButtonWrapper-sc-17yg8wp-0",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "-moz-appearance:none;-webkit-appearance:none;background:none;border:none;outline:none;font-size:inherit;",
                          ],
                        },
                        "displayName": "ButtonWrapper",
                        "render": [Function],
                        "styledComponentId": "ButtonWrapper-sc-17yg8wp-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    overrides={Object {}}
                    shown={true}
                    type="button"
                  >
                    <button
                      className="c1 c2"
                      onClick={[Function]}
                      type="button"
                    >
                      <ButtonStyles
                        color="primary"
                        overrides={Object {}}
                        size="small"
                        tabIndex={-1}
                      >
                        <StyledComponent
                          color="primary"
                          forwardedClass={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": undefined,
                              "componentStyle": ComponentStyle {
                                "componentId": "ButtonStyles-sc-5bwci9-0",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "background-color:",
                                  [Function],
                                  ";color:",
                                  [Function],
                                  ";border:1px solid ",
                                  [Function],
                                  ";display:inline-block;outline:none;cursor:pointer;",
                                  [Function],
                                  ";text-align:center;line-height:1.5;transition:0.1s linear;box-shadow:0 1px 2px 0 rgba(0,0,0,0.2);svg{vertical-align:middle;}&:hover{box-shadow:0 2px 4px 0 rgba(0,0,0,0.2),0 3px 10px 0 rgba(0,0,0,0.19);}&:active{box-shadow:none;}",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "ButtonStyles",
                              "render": [Function],
                              "styledComponentId": "ButtonStyles-sc-5bwci9-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          overrides={Object {}}
                          size="small"
                          tabIndex={-1}
                        >
                          <span
                            className="c3"
                            color="primary"
                            size="small"
                            tabIndex={-1}
                          >
                            <IoIosArrowBack
                              style={
                                Object {
                                  "fontSize": "20px",
                                  "textAlign": "center",
                                }
                              }
                            >
                              <IconBase
                                attr={
                                  Object {
                                    "viewBox": "0 0 512 512",
                                  }
                                }
                                style={
                                  Object {
                                    "fontSize": "20px",
                                    "textAlign": "center",
                                  }
                                }
                              >
                                <svg
                                  fill="currentColor"
                                  height="1em"
                                  stroke="currentColor"
                                  strokeWidth="0"
                                  style={
                                    Object {
                                      "color": undefined,
                                      "fontSize": "20px",
                                      "textAlign": "center",
                                    }
                                  }
                                  viewBox="0 0 512 512"
                                  width="1em"
                                >
                                  <path
                                    d="M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z"
                                    key="0"
                                  />
                                </svg>
                              </IconBase>
                            </IoIosArrowBack>
                          </span>
                        </StyledComponent>
                      </ButtonStyles>
                    </button>
                  </StyledComponent>
                </ButtonWrapper>
              </Button>
            </StyledComponent>
          </SideBarBtn>
        </div>
      </StyledComponent>
    </SideBarContainer>
    <SideBarPage__PageWrapper
      shown={true}
    >
      <StyledComponent
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "SideBarPage__PageWrapper-sc-1et1n1c-0",
              "isStatic": false,
              "lastClassName": "c4",
              "rules": Array [
                "position:relative;transition:100ms linear;z-index:0;padding-left:",
                [Function],
                ";",
              ],
            },
            "displayName": "SideBarPage__PageWrapper",
            "render": [Function],
            "styledComponentId": "SideBarPage__PageWrapper-sc-1et1n1c-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        shown={true}
      >
        <div
          className="c4"
        />
      </StyledComponent>
    </SideBarPage__PageWrapper>
  </div>
</SideBarPage>
`;
